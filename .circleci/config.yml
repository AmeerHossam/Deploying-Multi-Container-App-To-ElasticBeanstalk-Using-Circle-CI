version: 2.1

jobs:
  build-and-test:
    machine: true  # Use machine instead of Docker
    steps:
      - checkout

      # Build Docker Test Image
      - run:
          name: Build Docker Test Image
          command: docker build -t sudo1amir/react-test -f ./client/Dockerfile.dev ./client/

      # Run Tests
      - run:
          name: Run Tests
          command: docker run -e CI=true sudo1amir/react-test npm test

  build-and-deploy:
    docker:
      - image: circleci/buildpack-deps:stretch
    steps:
      - checkout

      # Build Docker Images
      - run:
          name: Build Docker Images
          command: |
            docker build -t sudo1amir/multi-container-react ./client
            docker build -t sudo1amir/multi-container-nginx ./nginx
            docker build -t sudo1amir/multi-container-server ./server
            docker build -t sudo1amir/multi-container-worker ./worker

      # Push images to Docker Hub
      - run:
          name: Push Images to Docker Hub
          command: |
            echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_ID" --password-stdin
            docker push sudo1amir/multi-container-react
            docker push sudo1amir/multi-container-nginx          
            docker push sudo1amir/multi-container-server
            docker push sudo1amir/multi-container-worker

      # Deploy to AWS Elastic Beanstalk
      - run:
          name: Deploy to AWS Elastic Beanstalk
          command: |
            # Install AWS CLI
            sudo apt-get update && sudo apt-get install awscli
            # Configure AWS Access
            aws configure set aws_access_key_id $AWS_ACCESS_KEY
            aws configure set aws_secret_access_key $AWS_SECRET_KEY
            aws configure set default.region us-east-1
            # Deploy using AWS Elastic Beanstalk CLI
            # Note: Ensure your project is configured for Elastic Beanstalk deployment
            eb deploy My-docker-app-env

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build-and-test
      - build-and-deploy:
          requires:
            - build-and-test
          filters:
            branches:
              only: main
